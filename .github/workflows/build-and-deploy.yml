name: Build Docker Image
permissions:
  contents: read
on:
  workflow_call:
    inputs:
      docker_context:
        description: 'Path to the Docker build context'
        required: false
        type: string
        default: '.'
      image_name:
        description: 'Name of the Docker image (e.g. my-app)'
        required: true
        type: string
      docker_platforms:
        description: 'Comma-separated list of platforms (e.g. linux/amd64,linux/arm64)'
        required: false
        type: string
        default: 'linux/amd64,linux/arm64'
      extra_tag:
        description: 'Extra tag for the Docker image'
        required: false
        type: string
        default: ''
    secrets:
      docker_registry_username:
        required: true
      docker_registry_password:
        required: true
      argocd_host:
        required: false
      argocd_password:
        required: false

jobs:
  build-and-push:
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Free up space
        run: |
          sudo sudo rm -rf /usr/share/dotnet  # ~20GB
          sudo rm -rf /opt/ghc           # ~4GB
          sudo rm -rf /usr/local/lib/android  # ~10GB

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker_registry_username }}
          password: ${{ secrets.docker_registry_password }}

      - name: Build Docker metadata
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: aukilabs/${{ inputs.image_name }}
          tags: |
            type=sha,format=long,prefix=
            type=raw,enable={{is_not_default_branch}},value={{branch}}
            type=raw,enable={{is_default_branch}},value=latest
            type=raw,enable=${{ inputs.extra_tag != '' }},value=${{ inputs.extra_tag }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.docker_context }}
          platforms: ${{ inputs.docker_platforms }}
          push: true
          tags: ${{ steps.docker-metadata.outputs.tags }}
  deploy:
    name: Deploy
    needs: build-and-push
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Authenticate ArgoCD
        uses: clowdhaus/argo-cd-action/@v2.3.0
        with:
          command: login
          options: --username admin --password "${{ secrets.argocd_password }}" --grpc-web "${{ secrets.argocd_host }}:443"
      - name: Sync ArgoCD app
        uses: clowdhaus/argo-cd-action/@v2.3.0
        with:
          command: app sync "vlm-node"
          options: --grpc-web --async

      - name: Restart vlm-node-server StatefulSet
        uses: clowdhaus/argo-cd-action/@v2.3.0
        with:
          command: app actions run "vlm-node" restart
          options: --kind StatefulSet --resource-name vlm-node-server --grpc-web

      - name: Restart vlm-node-ui Deployment
        uses: clowdhaus/argo-cd-action/@v2.3.0
        with:
          command: app actions run "vlm-node" restart
          options: --kind Deployment --resource-name vlm-node-ui --grpc-web
