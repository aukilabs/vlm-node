name: Release Docker Image

on:
  push:
    tags: [ 'v*.*.*' ]

jobs:
  log-in-to-amazon-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.GLOBAL_COMMON_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.GLOBAL_COMMON_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.GLOBAL_COMMON_AWS_REGION }}
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'
    outputs:
      registry: ${{ steps.ecr-login.outputs.registry }}
      docker_username: ${{ steps.ecr-login.outputs.docker_username_026987513085_dkr_ecr_us_east_1_amazonaws_com }}
      docker_password: ${{ steps.ecr-login.outputs.docker_password_026987513085_dkr_ecr_us_east_1_amazonaws_com }}
  release-docker:
    needs: [log-in-to-amazon-ecr]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [vlm-node-server, vlm-node-worker]
      fail-fast: true
    env:
      APP: ${{ matrix.app }}
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up regclient regctl
        run: |
          cat > regctl << 'EOF'
          #!/bin/sh
          docker container run -i --rm --net host \
            -u "$(id -u):$(id -g)" -e HOME -v $HOME:$HOME \
            -v /etc/docker/certs.d:/etc/docker/certs.d:ro \
          regclient/regctl:v0 "$@"
          EOF
          chmod +x regctl
      # This seems to still be needed as the credential sharing for Docker doesn't work yet
      # and re-using credentials for ECR isn't supported: https://github.com/regclient/regclient/issues/110
      - name: Log in to Docker registries
        run: |
          ./regctl registry login -u '${{ secrets.DOCKER_USERNAME }}' -p '${{ secrets.DOCKER_PASSWORD }}'

          ./regctl registry login ${{ needs.log-in-to-amazon-ecr.outputs.registry }} -u AWS -p "${{ needs.log-in-to-amazon-ecr.outputs.docker_password }}"

          ./regctl registry config
          echo "Testing credentials. Docker Hub might fail because it doesn't support listing images."
          ./regctl repo ls --limit 5 ${{ needs.log-in-to-amazon-ecr.outputs.registry }} || true
          ./regctl repo ls --limit 5 docker.io || true

      - name: Add version tag to image and push
        run: |
          ecr_base="${{ needs.log-in-to-amazon-ecr.outputs.registry }}/${APP}"
          dockerhub_base="aukilabs/${APP}"
          minor_version_tag="$(echo "${{ github.ref_name }}" | awk -F'.' '{print $1 "." $2}')"
          major_version_tag="$(echo "${{ github.ref_name }}" | awk -F'.' '{print $1}')"

          for tag in \
            "stable" \
            "${{ github.ref_name }}" \
            "${minor_version_tag}" \
            "${major_version_tag}" \
          ; do
            # original (internal)
            if [ "$tag" != "${{ github.ref_name }}" ]; then # exception for ref_name as it was created in deploy.yml
              ./regctl image copy "${ecr_base}:${{ github.sha }}-internal" "${ecr_base}:${tag}-internal"
            fi
            # obfuscated (external)
            ./regctl image copy "${ecr_base}:${{ github.sha }}" "${ecr_base}:${tag}"
            ./regctl image copy "${ecr_base}:${{ github.sha }}" "${dockerhub_base}:${tag}"
          done
