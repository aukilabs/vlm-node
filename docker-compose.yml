services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
  letsencrypt:
    image: nginxproxy/acme-companion
    restart: unless-stopped
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
  change-data-folder-ownership:
    image: busybox:stable-musl
    user: root
    volumes:
      - ./data:/tmp/volume
    command: chown -R 100:101 /tmp/volume
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-compute_node_db}
      POSTGRES_USER: ${POSTGRES_USER:-compute_node_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-compute_node_password}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-compute_node_user} -d ${POSTGRES_DB:-compute_node_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
  ui:
    build:
      context: ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
  server:
    build:
      context: server
      dockerfile: Dockerfile
    environment:
      - POSTGRES_URL=postgres://compute_node_user:compute_node_password@postgres:5432/compute_node_db
      - DATA_DIR=/app/data
      - OLLAMA_HOST=http://ollama:11434
    env_file:
      - .env
      - .env.local
    ports:
      - "8080:8080"
    labels:
      com.github.nginx-proxy.nginx-proxy.keepalive: 20
    depends_on:
      postgres:
        condition: service_healthy
      change-data-folder-ownership:
        condition: service_completed_successfully
      ollama:
        condition: service_completed_successfully
    volumes:
      - ./data:/app/data
  worker:
    build:
      context: ai
      dockerfile: Dockerfile
    environment:
      - POSTGRES_URL=postgres://compute_node_user:compute_node_password@postgres:5432/compute_node_db
      - DATA_DIR=/app/data
      - OLLAMA_HOST=http://ollama:11434
    env_file:
      - .env
      - .env.local
    ports:
      - "8081:8081"
    labels:
      com.github.nginx-proxy.nginx-proxy.keepalive: 20
    depends_on:
      postgres:
        condition: service_healthy
      change-data-folder-ownership:
        condition: service_completed_successfully
      ollama:
        condition: service_completed_successfully
    volumes:
      - ./data:/app/data
  ollama:
    image: ollama/ollama:latest
    environment:
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      http_proxy: ""
      https_proxy: ""
      NO_PROXY: "localhost,127.0.0.1,.local"
    ports:
      - "11434:11434"
    volumes:
      - ./data/models:/root/.ollama/models
volumes:
  postgres_data:
  conf:
  vhost:
  html:
  dhparam:
  certs:
  acme:
